#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
using namespace std;
 
 
// Создание данных списка
struct Library {
    char UDCnumber[11], FIO[50], name[30], year[15], numberOfCopies[10];
};
 
// Создание самой ячейки списка 
struct Book {
    Library *node;
    Book *next; // Указатель на следующий элемент
    Book *prev; // Указатель на предыдущий элемент
};

Book *head = NULL; // Голова списка, самый начальный элемент
Book *tail = NULL; // Хвост списка, конечный элемент

// Функция создания первого элемента списка 
Book *createLibrary(Library *node) { // Мы передаем в функцию значения отработки функции addKarta, которая сформировала новую структуру, с нужными данными
    Book *data = new Book; // По средствам структуру Book мы создаем новый обьект(узел), в который заносим данные
    data->node = node; // Переносим данные, которые мы ввели и преедали из функции addKarta в поле нового обьекта(узла)
    data->next = NULL; // Так как обьект первый у него нету указателя на следующий элемент, так как и на предыдущий
    data->prev = NULL;
    
    head = data; 
    tail = data;
    return data;
    // На данном этапе у нас 1 элемент, по этому и начало, и конец, равен этому элементу
}

// Функция добавление элемента списка 
Library *addLibrary() {
    cout<<"Данные о книгах:\n";
    Library *node = new Library; // Создает по средству структуры Library данные, в которые мы заносим введенные переменные
    cout<<"Введите номер УДК:"; cin>>node->UDCnumber;
    cout<<"Введите фамилию и инициалы автора:"; cin>>node->FIO;
    cout<<"Введите название:"; cin>>node->name;
    cout<<"Введите год издания:"; cin>>node->year;
    cout<<"Введите количество экземпляров данной книги в библиотеке:"; cin>>node->numberOfCopies;
    return node; // Возвращаем данные
}
  
 
// Функция добавления элемента списка 
void addingData(Library *node, Book *data) { // В данную функции мы так же передаем результат работы addKarta
// и берем из памяти данные, которые мы внесли, которые содержат информацию о нашем списке
    // Перебор все элементов, пока не дойдем до последнего
    while(data->next != NULL) {
        data = data->next; // Переход на следующий элемент
    }
    data->next = new Book; // Как только мы нашли последний, то создаем новую структуру, в которую записываем все данные
    data->next->node = node;
    data->next->next = NULL;
    data->next->prev = tail; // Так как у нас больше одного элемента, хвостом становится самый последний
    tail = data->next;
}
 
// Функция вывода элементов списка  
void printData(Book *data) { // Передаем данные о нашем списке
    while(data != NULL) { // Простой перебор всех элементов пока не дойдем до последнего
        cout<<"\nНомер УДК: "<<data->node->UDCnumber;
        cout<<"\nФамилию и инициалы автора: "<<data->node->FIO;
        cout<<"\nНазвание: "<<data->node->name;
        cout<<"\nГод издания: "<<data->node->year<<"\n";
        cout<<"\nКоличество экземпляров данной книги в библиотеке: "<<data->node->numberOfCopies<<"\n";
        data = data->next; // Переход на следующий элемент
    }
}

Book* deleteLibrary(Book *book) { // Удаление обьекта(узла) посредством выборки
    Book *last = book, *data = book;
    char UDCnumber[10]; // Создаем переменную, которая будет содержать данные, по которому будет производиться поиск и удаляться данные
    
    cout<<"Введите номер книги: \n";
    cin>>UDCnumber;
    
    while (data) { // Цикл перебора подходящего элемента
        if (!strcmp(UDCnumber, data->node->UDCnumber)) { // Проверка на схожесть
            {
                data->node = NULL;
                if(last == data) {
                    book = data->next;
                } else {
                    last->next = data->next;
                }    
                delete data;
                last = data;
                data = data->next;
            }
        }
        else if (strcmp(UDCnumber, data->node->UDCnumber))
            data = data->next;
    }
 
    cout<<"Запись удалена\n";
    return book; // Возвращает измененую структуру
}

int choice() {
    int answer;
    cout<<"Сделайте выбор: \n";
    cout<<"1) Занисение начальных данных\n";
    cout<<"2) Добавление книги\n";
    cout<<"3) Вывод всех книг\n";
    cout<<"4) Найти книги и удалить\n";
    cout<<"5) Очистить список книг\n";
    cout<<"6) Выход из программы\n";
    cout<<"Введите свой выбор: ";
    cin>>answer;
    cout<<"\n";
    cout<<"\n";
    if (answer > 0 && answer < 7)
        return answer;
    else
        return 0;
}
 
int main() {
    Book *data = NULL; // Создаем структуру
    int returnChoice, n; // Переменная для выбора 
    bool close = true;    
    
    while(close == true) {
        returnChoice = choice();
        
        if(returnChoice == 1) {
            cout<<"Сколько книг хотите добавить: ";
            cin>> n;
            cout<<"\n";
            cout<<"\n";
            
            for(int i = 0; i < n; i++) {
                if(data == NULL) {
                    data = createLibrary(addLibrary());                    
                }
                else {
                    addingData(addLibrary(), data);
                }
                cout<<"\n";
                cout<<"\n";
            }
        }
        
        else if(returnChoice == 2) {
            cout<<"\n";
            if(data == NULL) {
                data = createLibrary(addLibrary());
            }
            else {
                addingData(addLibrary(), data);
            }
                
            cout<<"\n";
            cout<<"\n";
        }
        
        else if(returnChoice == 3) { // Отображение всех записей
            printData(data);
            cout<<"\n";
            cout<<"\n";
        }
        
        else if(returnChoice == 4) {
            data = deleteLibrary(data);
            cout<<"\n";
            cout<<"\n";
        }
 
        else if(returnChoice == 5)
        {
            data = NULL; // Удаляет в программе
            cout<<"Все записи удалены!\n";
            delete data; // Удаляет в памяти
            cout<<"\n";
            cout<<"\n";
            cout<<"\n";
            
        }
 

        else if (returnChoice == 6) { // Выход
            close = false;
        }
 
        else if(returnChoice < 1 || returnChoice > 6) {
            cout<<"Ваш выбор не соответствует пунктам меню!\n";
            cout<<"\n";
            cout<<"\n";
        }
        
    }
    return 0;
}